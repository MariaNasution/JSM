generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String   
  email     String   @unique
  role      String   

  employeeId Int?    @unique
  employee   Employee? @relation(fields: [employeeId], references: [id]) 
}

model CompanyBranch {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  status      String
  divisions   Division[]
  departments Department[]
  units       Unit[]
}

model Division {
  id          Int          @id @default(autoincrement())
  name        String
  status      String
  
  branchId    Int
  branch      CompanyBranch @relation(fields: [branchId], references: [id])
  
  departments Department[]
  units       Unit[]
  
  @@unique([name, branchId])
}

model Department {
  id          Int          @id @default(autoincrement())
  name        String
  status      String

  branchId    Int
  branch      CompanyBranch @relation(fields: [branchId], references: [id])

  divisionId  Int
  division    Division      @relation(fields: [divisionId], references: [id])

  units       Unit[]

  @@unique([name, divisionId])
}

model Unit {
  id          Int          @id @default(autoincrement())
  name        String
  status      String

  branchId    Int
  branch      CompanyBranch @relation(fields: [branchId], references: [id])
  
  divisionId  Int
  division    Division      @relation(fields: [divisionId], references: [id])
  
  departmentId Int
  department   Department @relation(fields: [departmentId], references: [id])

  @@unique([name, departmentId])
}

model EmployeeType {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  status String
}

model JobLevel {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  status String
}

model EmployeeStatus {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  status String
}

model Employee {
  id                      Int       @id @default(autoincrement())
  name                    String
  firstName               String?
  lastName                String?
  placeOfBirth            String?
  birthdate               DateTime?
  gender                  String?
  religion                String?
  maritalStatus           String?
  bloodType               String?
  email                   String?
  phoneNumber             String?
  companyName             String?
  employeeId              String?
  division                String
  department              String
  unit                    String?
  jobLevel                String
  status                  String
  joinDate                DateTime
  signDate                DateTime?
  endEmploymentStatusDate DateTime?
  
  // Relasi User/Account
  user User?
}